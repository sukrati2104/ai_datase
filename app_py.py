# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-ddMO5rWBpnWE-pvx5EGZy79KhG7jR-R
"""

import streamlit as st
import pandas as pd
import numpy as np
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split

# Load your dataset
@st.cache_data
def load_data():
    df = pd.read_csv("ai_job_dataset.csv")
    df = df.dropna(subset=['job_title', 'company_location', 'experience_level',
                           'required_skills', 'years_experience', 'salary_usd'])
    return df

df = load_data()

# Define features and target
X = df[['job_title', 'company_location', 'experience_level', 'required_skills', 'years_experience']]
y = df['salary_usd']

# Define feature groups
categorical_features = ['job_title', 'company_location', 'experience_level']
text_feature = 'required_skills'
numeric_feature = ['years_experience']

# Preprocessing pipeline
preprocessor = ColumnTransformer(transformers=[
    ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_features),
    ('text', CountVectorizer(tokenizer=lambda x: x.split(', ')), text_feature),
    ('num', StandardScaler(), numeric_feature)
])

# Complete pipeline with model
model = Pipeline(steps=[
    ('preprocessor', preprocessor),
    ('regressor', RandomForestRegressor(random_state=42))
])

# Train the model
model.fit(X, y)

# Streamlit Web App UI
st.title("üíº AI Job Salary Predictor")
st.markdown("Predict the salary based on job details üîç")

job_title = st.selectbox("Job Title", sorted(df['job_title'].unique()))
company_location = st.selectbox("Company Location", sorted(df['company_location'].unique()))
experience_level = st.selectbox("Experience Level", sorted(df['experience_level'].unique()))
skills = st.text_input("Enter Skills (comma-separated)", "Python, SQL, Machine Learning")
years_experience = st.slider("Years of Experience", 0, 30, 3)

# Predict salary
if st.button("Predict Salary üí∞"):
    input_data = pd.DataFrame([{
        'job_title': job_title,
        'company_location': company_location,
        'experience_level': experience_level,
        'required_skills': skills,
        'years_experience': years_experience
    }])

    predicted_salary = model.predict(input_data)[0]
    st.success(f"üí∞ Estimated Salary: ${predicted_salary:,.2f}")

from google.colab import files
uploaded = files.upload()

!pip install streamlit